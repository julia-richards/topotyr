{"version":3,"sources":["pages/Maps/SilvertonTrails/index.js"],"names":["mapOptions","slug","name","geoJSON","anvilNiagara","center","iceLakes","SilvertonTrails","_ref","match","params","_useState","history","useState","_useState2","Object","_Users_JuliaRichards_Hut_topotyr_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","basemap","setBasemap","activeMap","find","mapOption","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","className","map","i","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to","concat","activeClassName","onClick","react_leaflet__WEBPACK_IMPORTED_MODULE_3__","zoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","react_leaflet__WEBPACK_IMPORTED_MODULE_4__","url","react_leaflet__WEBPACK_IMPORTED_MODULE_5__","data","key","style","feature","color"],"mappings":"ul7NAUMA,eAAa,CACjB,CACEC,KAAM,QACNC,KAAM,mBACNC,QAASC,EACTC,OAAQ,CAAC,WAAY,aAEvB,CACEJ,KAAM,YACNC,KAAM,YACNC,QAASG,EACTD,OAAQ,CAAC,UAAW,eA8ETE,UA1ES,SAAAC,GAKlB,IAHQP,EAGRO,EAJJC,MACEC,OAAUT,KAGRU,GAAAH,EADJI,QAE8BC,mBAC5B,mDAFEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACGM,EADHH,EAAA,GACYI,EADZJ,EAAA,GAIEK,EAAYnB,EAAWoB,KAAK,SAAAC,GAAS,OAAIA,EAAUpB,OAASA,IAElE,OACEqB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZ1B,EAAW2B,IAAI,SAACN,EAAWO,GAAZ,OACdN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,GAAE,0BAAAC,OAA4BV,EAAUpB,MACxCyB,UAAU,WACVM,gBAAgB,oBAEfX,EAAUnB,SAIdiB,EACDG,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,UAAKL,EAAUjB,MAEfoB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACES,QAAS,kBACPf,EAAW,oDAFf,WAOAI,EAAAC,EAAAC,cAAA,UACES,QAAS,kBACPf,EACE,oGAHN,cAUFI,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACE7B,OAAQc,EAAUd,OAClB8B,KAAM,GACNC,oBAAoB,EACpBC,aAAa,EACbC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,EACVC,SAAS,EACTC,cAAe,KAEfpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAWC,IAAK3B,IAChBK,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,KAAM3B,EAAUhB,QAChB4C,IAAK5B,EAAUlB,KACf+C,MAAO,SAAAC,GAAO,MAAK,CAAEC,MAAO,gBAKlC5B,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBAAd","file":"static/js/6.1ad16678.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Map, GeoJSON, TileLayer } from \"react-leaflet\";\n\nimport anvilNiagara from \"./AnviltoNiagara.json\";\nimport iceLakes from \"./IceLakes.json\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"./SilvertonTrails.css\";\n\nconst mapOptions = [\n  {\n    slug: \"anvil\",\n    name: \"Anvil to Niagara\",\n    geoJSON: anvilNiagara,\n    center: [37.815015, -107.667013]\n  },\n  {\n    slug: \"ice_lakes\",\n    name: \"Ice Lakes\",\n    geoJSON: iceLakes,\n    center: [37.80669, -107.774144]\n  }\n];\n\nconst SilvertonTrails = ({\n  match: {\n    params: { slug }\n  },\n  history\n}) => {\n  const [basemap, setBasemap] = useState(\n    \"http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg\"\n  );\n  const activeMap = mapOptions.find(mapOption => mapOption.slug === slug);\n\n  return (\n    <React.Fragment>\n      <div className=\"map-page-container\">\n        <nav className=\"map-nav\">\n          {mapOptions.map((mapOption, i) => (\n            <NavLink\n              to={`/maps/silverton_trails/${mapOption.slug}`}\n              className=\"map-link\"\n              activeClassName=\"map-link--active\"\n            >\n              {mapOption.name}\n            </NavLink>\n          ))}\n        </nav>\n        {!!activeMap ? (\n          <React.Fragment>\n            <h1>{activeMap.name}</h1>\n\n            <div>\n              <button\n                onClick={() =>\n                  setBasemap(\"http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg\")\n                }\n              >\n                Terrain\n              </button>\n              <button\n                onClick={() =>\n                  setBasemap(\n                    \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\"\n                  )\n                }\n              >\n                Satellite\n              </button>\n            </div>\n            <Map\n              center={activeMap.center}\n              zoom={13}\n              attributionControl={true}\n              zoomControl={true}\n              doubleClickZoom={true}\n              scrollWheelZoom={false}\n              dragging={true}\n              animate={true}\n              easeLinearity={0.35}\n            >\n              <TileLayer url={basemap} />\n              <GeoJSON\n                data={activeMap.geoJSON}\n                key={activeMap.slug}\n                style={feature => ({ color: \"#A6483E\" })}\n              />\n            </Map>\n          </React.Fragment>\n        ) : (\n          <h3 className=\"none-selected-msg\">Select a trail!</h3>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SilvertonTrails;\n"],"sourceRoot":""}